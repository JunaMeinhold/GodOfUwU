// <auto-generated />
using System;
using GodOfUwU.Core;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GodOfUwU.Core.Migrations
{
    [DbContext(typeof(UserContext))]
    [Migration("20220509162253_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.4");

            modelBuilder.Entity("GodOfUwU.Core.Entities.ForbiddenText", b =>
                {
                    b.Property<string>("Text")
                        .HasColumnType("TEXT");

                    b.Property<ulong?>("GuildId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Text");

                    b.HasIndex("GuildId");

                    b.ToTable("ForbiddenText");
                });

            modelBuilder.Entity("GodOfUwU.Core.Entities.Guild", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Guilds");
                });

            modelBuilder.Entity("GodOfUwU.Core.Entities.GuildUser", b =>
                {
                    b.Property<ulong>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("GuildId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastActivity")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "GuildId");

                    b.HasIndex("GuildId");

                    b.ToTable("GuildUsers");
                });

            modelBuilder.Entity("GodOfUwU.Core.Entities.Permission", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Name");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("GodOfUwU.Core.Entities.Role", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("GuildId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("GuildId");

                    b.HasIndex("UserId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("GodOfUwU.Core.Entities.User", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("GodOfUwU.Core.Entities.Warning", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("GuildId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TEXT");

                    b.Property<ulong?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("GuildId");

                    b.HasIndex("UserId");

                    b.ToTable("Warning");
                });

            modelBuilder.Entity("GuildUserRole", b =>
                {
                    b.Property<ulong>("RolesId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("UsersUserId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("UsersGuildId")
                        .HasColumnType("INTEGER");

                    b.HasKey("RolesId", "UsersUserId", "UsersGuildId");

                    b.HasIndex("UsersUserId", "UsersGuildId");

                    b.ToTable("GuildUserRole");
                });

            modelBuilder.Entity("PermissionRole", b =>
                {
                    b.Property<string>("PermissionsName")
                        .HasColumnType("TEXT");

                    b.Property<ulong>("RolesId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PermissionsName", "RolesId");

                    b.HasIndex("RolesId");

                    b.ToTable("PermissionRole");
                });

            modelBuilder.Entity("GodOfUwU.Core.Entities.ForbiddenText", b =>
                {
                    b.HasOne("GodOfUwU.Core.Entities.Guild", "Guild")
                        .WithMany("ForbiddenTexts")
                        .HasForeignKey("GuildId");

                    b.Navigation("Guild");
                });

            modelBuilder.Entity("GodOfUwU.Core.Entities.GuildUser", b =>
                {
                    b.HasOne("GodOfUwU.Core.Entities.Guild", "Guild")
                        .WithMany("Users")
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GodOfUwU.Core.Entities.User", "User")
                        .WithMany("Guilds")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guild");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GodOfUwU.Core.Entities.Role", b =>
                {
                    b.HasOne("GodOfUwU.Core.Entities.Guild", null)
                        .WithMany("Roles")
                        .HasForeignKey("GuildId");

                    b.HasOne("GodOfUwU.Core.Entities.User", null)
                        .WithMany("Roles")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("GodOfUwU.Core.Entities.Warning", b =>
                {
                    b.HasOne("GodOfUwU.Core.Entities.Guild", null)
                        .WithMany("Warnings")
                        .HasForeignKey("GuildId");

                    b.HasOne("GodOfUwU.Core.Entities.User", null)
                        .WithMany("Warnings")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("GuildUserRole", b =>
                {
                    b.HasOne("GodOfUwU.Core.Entities.Role", null)
                        .WithMany()
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GodOfUwU.Core.Entities.GuildUser", null)
                        .WithMany()
                        .HasForeignKey("UsersUserId", "UsersGuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PermissionRole", b =>
                {
                    b.HasOne("GodOfUwU.Core.Entities.Permission", null)
                        .WithMany()
                        .HasForeignKey("PermissionsName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GodOfUwU.Core.Entities.Role", null)
                        .WithMany()
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GodOfUwU.Core.Entities.Guild", b =>
                {
                    b.Navigation("ForbiddenTexts");

                    b.Navigation("Roles");

                    b.Navigation("Users");

                    b.Navigation("Warnings");
                });

            modelBuilder.Entity("GodOfUwU.Core.Entities.User", b =>
                {
                    b.Navigation("Guilds");

                    b.Navigation("Roles");

                    b.Navigation("Warnings");
                });
#pragma warning restore 612, 618
        }
    }
}
